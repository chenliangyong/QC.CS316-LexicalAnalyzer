int   : Keyword_int
square   : Id
(   : LParen
int   : Keyword_int
x   : Id
)   : RParen
=   : Eq
(   : LParen
*   : Mul
x   : Id
x   : Id
)   : RParen
float   : Keyword_float
pi   : Id
=   : Eq
3.14159   : Float
float   : Keyword_float
cylinder_volume   : Id
(   : LParen
float   : Keyword_float
length   : Id
,   : Comma
float   : Keyword_float
radius   : Id
)   : RParen
=   : Eq
(   : LParen
*   : Mul
length   : Id
(   : LParen
*   : Mul
(   : LParen
pi   : Id
)   : RParen
(   : LParen
square   : Id
radius   : Id
)   : RParen
)   : RParen
)   : RParen
int   : Keyword_int
fact   : Id
(   : LParen
int   : Keyword_int
n   : Id
)   : RParen
=   : Eq
if   : Keyword_if
(   : LParen
=   : Eq
n   : Id
0   : Int
)   : RParen
then   : Keyword_then
1   : Int
else   : Keyword_else
(   : LParen
*   : Mul
n   : Id
(   : LParen
fact   : Id
(   : LParen
-   : Sub
n   : Id
1   : Int
)   : RParen
)   : RParen
)   : RParen
int   : Keyword_int
test   : Id
(   : LParen
int   : Keyword_int
x   : Id
,   : Comma
int   : Keyword_int
y   : Id
)   : RParen
=   : Eq
if   : Keyword_if
(   : LParen
>   : Gt
x   : Id
-0987   : Int
)   : RParen
then   : Keyword_then
+6453   : Int
else   : Keyword_else
-1540   : Int
